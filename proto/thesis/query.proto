syntax = "proto3";
package thesis.thesis;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "thesis/params.proto";
import "thesis/certificate.proto";
import "thesis/document.proto";
import "thesis/system_info.proto";
// this line is used by starport scaffolding # 1

option go_package = "thesis/x/thesis/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/thesis/thesis/params";
  }
// Queries a list of Certificates items.
	rpc Certificates(QueryCertificatesRequest) returns (QueryCertificatesResponse) {
		option (google.api.http).get = "/thesis/thesis/certificates";
	}

// Queries a Document by index.
	rpc Document(QueryGetDocumentRequest) returns (QueryGetDocumentResponse) {
		option (google.api.http).get = "/thesis/thesis/document/{index}";
	}

	// Queries a list of Document items.
	rpc DocumentAll(QueryAllDocumentRequest) returns (QueryAllDocumentResponse) {
		option (google.api.http).get = "/thesis/thesis/document";
	}

// Queries a SystemInfo by index.
	rpc SystemInfo(QueryGetSystemInfoRequest) returns (QueryGetSystemInfoResponse) {
		option (google.api.http).get = "/thesis/thesis/system_info";
	}
// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryCertificatesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination =1;
}

message QueryCertificatesResponse {
  repeated Certificate Certificate = 1;

  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetDocumentRequest {
	  string index = 1;

}

message QueryGetDocumentResponse {
	Document document = 1 [(gogoproto.nullable) = false];
}

message QueryAllDocumentRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDocumentResponse {
	repeated Document document = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetSystemInfoRequest {}

message QueryGetSystemInfoResponse {
	SystemInfo SystemInfo = 1 [(gogoproto.nullable) = false];
}
// this line is used by starport scaffolding # 3
